import math
import pandas as pd
import numpy as np
import scipy.stats as st
import pylab
import matplotlib.pyplot as plt
from  matplotlib import mlab
import random
import statistics

def mode(freq_table):
    max = 0.0

    result = dict()

    for key in freq_table.keys():
        if freq_table[key] > max:
            max = float(freq_table[key])

    for key in freq_table:
        if freq_table[key] == max:
            result[key] = float(freq_table[key])

    return result

def dev(freq_table):
    res = 0
    avg = 0
    length = 0

    for x in freq_table:
        avg += (x * freq_table[x])
        length += freq_table[x] 

    avg /= length

    for x in freq_table:
        res +=  freq_table[x] * (x - avg)**(2)
    return res

def stdev(nums):
    diffs = 0
    avg = sum(nums)/len(nums)
    for n in nums:
        diffs += (n - avg)**(2)
    return (diffs/(len(nums)-1))**(0.5)

def r(sample):
    res = 0
    n = len(sample)

    while not (n > math.pow(2,res) and n <= math.pow(2, res+1)):
        res += 1

    return res

def centr_mean(centr_freq):
    res = 0
    for key in centr_freq:
        res += float(key) * centr_freq[key]

    return res / sum(centr_freq.values())

def discrete():
    n = int(input("Кiлькiсть елементiв: "))
    lower_bound = int(input("Нижня межа значень вибiрки: "))
    upper_bound = int(input("Верхня межа значень вибiрки: "))

    sample = list()

    for i in range(n):
        num = random.randint(lower_bound, upper_bound)
        
        sample.append(num)

    #sample = [20,20,20,25,25,25,25,25,30,30,30,30,35,35,35,35,35,40,40,40,45,45,45,45,45]
    print("\nВибірка:")
    print(sample)
    
    var = list(sample)
    var.sort()
    x = list(set(sample))
    y = list()
    x.sort()

    print("\nВаріаційний ряд:")
    print(var)

    freq_table = dict()

    for num in x:
        freq_table[num] = sample.count(num)

    print("\nЧастотна таблиця:")

    for key in freq_table:
        print("x[i] = " + str(key) + "\tn[i] = " + str(freq_table[key]))
        y.append(freq_table[key])

    pylab.plot(x, y, label = "Частотний полігон")
    pylab.show()
    pylab.scatter(x, y, label = "Частотний графік")
    pylab.show()
    pylab.vlines(x, 0, y, linestyle = "dashed")
    pylab.scatter(x, y, zorder = 2, label = "Частотна діаграма")
    pylab.show()
    
    print('\nЧислові характеристики:')

    print("\nСереднє значення: " + str(np.mean(sample)))
    print("\nМода: ")
    print(list(mode(freq_table).keys()))

    print("\nМедiана: " + str(statistics.median(sample)))

    ro = max(sample) - min(sample)
    print("\nРозмах: " + str(ro))
    
    print("\nДевiацiя: " + str(dev(freq_table)))

    variansa = dev(freq_table) / (len(sample)-1)
    print("\nВарiанса: " + str(variansa))

    standart = math.sqrt(variansa)
    print("\nСтандарт: " + str(standart))

    variation = standart / np.mean(sample)
    print("\nВаріація: " + str(variation))

    print("\nАсиметрія: " + str(st.skew(sample)))
    
    print("\nЕксцес: " + str(st.kurtosis(sample)))

    qr = list()

    if len(var) % 4 == 0:
        for i in range(int(len(var)/4)-1, (len(var)-int(len(var)/4)), int(len(var)/4)):
            qr.append(var[i])

        print("\nКвартилі: " + str(qr))
        print('\nІнтерквартильна широта: ' + str(qr[-1] - qr[0]))

    dec = list()

    if len(var) % 10 == 0:
        for i in range(int(len(var)/10)-1, (len(var)-int(len(var)/10)), int(len(var)/10)):
            dec.append(var[i])

        print("\nДецилі: " + str(dec))
        print('\nІнтердецильна широта: ' + str(dec[-1] - dec[0]))

    prob = list()
    a = list(set(sample))
    for key in freq_table:
        prob.append(freq_table[key] / len(sample))

    #print(prob)

    #plt.plot(np.sort(sample), np.linspace(0, 1, len(sample), endpoint=False))
    #x = np.sort(sample)
    #plt.plot(x, np.arange(len(x)) / float(len(x)))
    #plt.show()
    for key in freq_table:
        freq_table[key] /= len(sample)
        freq_table[key] = round(freq_table[key], 2)

    prob_table = dict(freq_table)
    for k in freq_table.keys():
        prob_table[ke
y] = freq_table[key]

    print('\nТаблиця відносних частот:')
    for key in prob_table:
        print(str(key) + ' - ' + str(prob_table[key]))

    print('\nЕмпірична функція розподілу:\n')
    print('0, \tx < ' + str(list(freq_table.keys())[0]))
    p = 0
    for i in range(len(prob_table.keys())-1):
        p += list(prob_table.values())[i]
        print(str(round(p, 2)) + ', \t' + str(list(prob_table.keys())[i]) + ' <= x < ' + str(list(prob_table.keys())[i+1]))
    print('1, \tx >= ' + str(list(freq_table.keys())[-1]))

    xstart = 0
    ystart = 0
    for pos_x,pos_y in freq_table.items():
        plt.hlines(xmin=xstart, xmax = pos_x, y = ystart, color ='b')
        plt.vlines(xstart, ymin=0, ymax=ystart, linestyle='--')
        #plt.vlines(pos_x, ymin=0, ymax=ystart, linestyle='--')
        xstart = pos_x
        ystart += pos_y

    plt.vlines(xstart, ymin=0, ymax=ystart, linestyle='--')
    plt.hlines(xmin=xstart, xmax = 50, y = ystart, color ='b')
    plt.xlim(xmin = min(sample)-1)
    plt.xlim(xmax = max(sample)+1)
    plt.show()

def main():

    option = input('1 - дискретна\n2 - неперервна\n')

    if option == '1':
        discrete()
    elif option == '2':
        continuous()
    else:
        print('error')
    
main()
